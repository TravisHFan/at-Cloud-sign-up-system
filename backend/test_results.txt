
> atcloud-signup-system-backend@1.0.0 test
> npm run test:unit && npm run test:integration


> atcloud-signup-system-backend@1.0.0 test:unit
> vitest run tests/unit --testTimeout=10000

[33mThe CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.[39m

 RUN  v1.6.1 /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend

🔧 Setting up test environment...
✅ Test environment ready
 ✓ tests/unit/models/User.test.ts  (73 tests) 28ms
stdout | tests/unit/models/User.test.ts > User Model
🔧 Setting up User model test environment...
✅ User model test environment cleaned up

stdout | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > getSystemMessages > should return system messages successfully
Found 1 total messages for user user123
After filtering, found 1 messages for user user123

stdout | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > getSystemMessages > should filter messages by type when provided
Found 1 total messages for user user123
After filtering, found 1 messages for user user123

stderr | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > getSystemMessages > should handle database errors
Error in getSystemMessages: Error: Database error
    at Function.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/unifiedMessageController.test.ts:429:17)
    at Function.mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at Function.spy [as find] (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:80)
    at Function.getSystemMessages (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/controllers/unifiedMessageController.ts:59:41)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/unifiedMessageController.test.ts:436:38
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)

stdout | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > createSystemMessage > should create system message successfully
🔔 Emitted system_message_update for user user1: "Test Bell Title"
🔔 Emitted system_message_update for user user2: "Test Bell Title"

stderr | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > createSystemMessage > should validate required fields
Error in createSystemMessage: Error [ValidationError]: Validation failed: title and content are required
    at t.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/unifiedMessageController.test.ts:42:23)
    at new mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at new spy (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:34)
    at Function.createSystemMessage (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/controllers/unifiedMessageController.ts:224:23)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/unifiedMessageController.test.ts:491:7
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:11)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)

stdout | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > createTargetedSystemMessage > should create targeted system message successfully
🔔 Emitted system_message_update for user user1: "Test Bell Title"
🔔 Emitted system_message_update for user user2: "Test Bell Title"
🔔 Emitted system_message_update for user user3: "Test Bell Title"

stderr | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > createTargetedSystemMessage > should handle errors gracefully
Error creating targeted system message: Error [ValidationError]: Validation failed: title and content are required
    at t.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/unifiedMessageController.test.ts:42:23)
    at new mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at new spy (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:34)
    at Function.createTargetedSystemMessage (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/controllers/unifiedMessageController.ts:980:31)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/unifiedMessageController.test.ts:807:34
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)

 ✓ tests/unit/controllers/unifiedMessageController.test.ts  (29 tests) 7ms
 ✓ tests/unit/services/ValidationService.test.ts  (59 tests) 8ms
 ✓ tests/unit/services/ConfigService.test.ts  (51 tests) 4ms
 ✓ tests/unit/models/Event.test.ts  (57 tests) 14ms
stdout | tests/unit/models/Event.test.ts:23:11
🔧 Setting up Event model test environment...

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require title field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require type field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require date field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require time field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require endTime field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require organizer field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require createdBy field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require purpose field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require format field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require roles array with at least one role
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate title length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate type length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate date format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should accept valid date format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate time format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should accept valid time format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate endTime format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should accept valid endTime format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate location length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate organizer length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate purpose length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate format enum values
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should accept valid format values
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate status enum values
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should accept valid status values
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Conditional Location Validation > should require location for In-person format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Conditional Location Validation > should require location for Hybrid Participation format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Conditional Location Validation > should not require location for Online format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Zoom Link Validation > should accept valid HTTP URL for zoomLink
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Zoom Link Validation > should accept valid HTTPS URL for zoomLink
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Zoom Link Validation > should reject invalid URL for zoomLink
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Zoom Link Validation > should accept empty string for zoomLink
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Zoom Link Validation > should accept undefined for zoomLink
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Event Roles Validation > should validate role name length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Event Roles Validation > should validate role description length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Event Roles Validation > should validate maxParticipants minimum value
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Event Roles Validation > should validate maxParticipants maximum value
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Event Roles Validation > should accept valid role data
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Instance Methods > calculateSignedUp > should calculate signed up count from Registration collection
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Instance Methods > calculateSignedUp > should return 0 when no registrations exist
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Instance Methods > calculateTotalSlots > should calculate total slots across all roles
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Instance Methods > calculateTotalSlots > should return 0 for event with no roles
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Instance Methods > calculateTotalSlots > should handle single role
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Default Values > should set default values correctly
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > JSON Transformation > should transform _id to id in JSON output
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Field Length Validations > should validate agenda length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Field Length Validations > should validate disclaimer length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Field Length Validations > should validate description length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Field Length Validations > should validate hostedBy length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Field Length Validations > should validate requirements length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Field Length Validations > should validate materials length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Organizer Details Validation > should validate organizer details structure
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Organizer Details Validation > should validate organizer gender enum
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Method Existence Tests > should have calculateSignedUp method
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Method Existence Tests > should have calculateTotalSlots method
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Method Existence Tests > should have toJSON method
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Method Existence Tests > should have validateSync method
✅ Event model test environment cleaned up

 ✓ tests/unit/services/ErrorHandlingService.test.ts  (56 tests) 9ms
 ✓ tests/unit/routes/analytics-isolated.test.ts  (26 tests) 45ms
 ✓ tests/unit/routes/users-isolated.test.ts  (22 tests) 19ms
 ✓ tests/unit/routes/search-isolated.test.ts  (23 tests) 17ms
stderr | tests/unit/middleware/auth.test.ts > Auth Middleware > authenticate middleware > should return 401 for JsonWebTokenError
Authentication error: Invalid token

stderr | tests/unit/middleware/auth.test.ts > Auth Middleware > authenticate middleware > should return 401 for TokenExpiredError
Authentication error: Token expired

stderr | tests/unit/middleware/auth.test.ts > Auth Middleware > authenticate middleware > should return 401 for other authentication errors
Authentication error: Some other error

 ✓ tests/unit/middleware/auth.test.ts  (33 tests) 9ms
 ✓ tests/unit/services/EventReminderScheduler.test.ts  (23 tests) 6ms
stdout | tests/unit/controllers/eventController.test.ts > EventController > getAllEvents > should successfully get events with pagination
🔍 [getAllEvents] Building 2 events with registration data
✅ [getAllEvents] Successfully built 2 events with registration counts

stdout | tests/unit/controllers/eventController.test.ts > EventController > getEventById > should successfully get event by ID
🔍 [getEventById] Building event data with registrations for event event123
✅ [getEventById] Successfully built event data with 1 roles
   Role 1: Participant - 0/10 registered

stdout | tests/unit/controllers/eventController.test.ts > EventController > createEvent > should successfully create a new event
🔔 Creating system messages for new event...

stderr | tests/unit/controllers/eventController.test.ts > EventController > createEvent > should successfully create a new event
❌ Failed to create system messages for event: TypeError: __vite_ssr_import_0__.User.find(...).select is not a function
    at Function.createEvent (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/controllers/eventController.ts:526:12)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/eventController.test.ts:360:7
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:11)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7
    at withEnv (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)

 ✓ tests/unit/controllers/eventController.test.ts  (29 tests) 8ms
 ✓ tests/unit/routes/events-isolated.test.ts  (21 tests) 18ms
stdout | _log (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/dotenv/lib/main.js:136:11)
[dotenv@17.2.0] injecting env (13) from .env (tip: 🔐 encrypt with dotenvx: https://dotenvx.com)

 ✓ tests/unit/services/infrastructure/EmailService.test.ts  (30 tests) 18ms
stdout | tests/unit/models/Registration.test.ts:10:11
🔧 Setting up Registration model test environment...

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Required Fields > should require userId field
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Required Fields > should require eventId field
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Required Fields > should require roleId field
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Required Fields > should require userSnapshot field
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Required Fields > should require eventSnapshot field
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Required Fields > should require registeredBy field
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Status Enum Validation > should accept valid status values
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Status Enum Validation > should reject invalid status values
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Status Enum Validation > should default status to active
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > UserSnapshot Validation > should require username in userSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > UserSnapshot Validation > should require email in userSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > UserSnapshot Validation > should validate gender enum in userSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > UserSnapshot Validation > should validate systemAuthorizationLevel enum
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > EventSnapshot Validation > should require title in eventSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > EventSnapshot Validation > should validate date format in eventSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > EventSnapshot Validation > should accept valid date format in eventSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > EventSnapshot Validation > should validate time format in eventSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > EventSnapshot Validation > should accept valid time format in eventSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Field Length Validations > should validate notes length
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Field Length Validations > should validate specialRequirements length
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Field Length Validations > should validate userAgent length
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > IP Address Validation > should accept valid IPv4 addresses
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > IP Address Validation > should accept valid IPv6 addresses
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > IP Address Validation > should reject invalid IP addresses
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > IP Address Validation > should allow empty IP address
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Instance Methods > addAuditEntry > should add audit entry to actionHistory
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Instance Methods > addAuditEntry > should add audit entry with previous and new values
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Instance Methods > updateNotes > should update notes and add audit entry
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Instance Methods > changeRole > should change role and add audit entry
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Instance Methods > confirmAttendance > should confirm attendance for active registration
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Instance Methods > confirmAttendance > should throw error for non-active registration
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Pre-save Middleware > should add initial audit entry for new registration
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Default Values > should set default values correctly
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > JSON Transformation > should transform _id to id in JSON output
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Action History Validation > should validate action enum values
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Action History Validation > should require performedBy in action history
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Action History Validation > should validate details length in action history
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Method Existence Tests > should have addAuditEntry method
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Method Existence Tests > should have updateNotes method
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Method Existence Tests > should have changeRole method
✅ Registration model test environment cleaned up

 ✓ tests/unit/models/Registration.test.ts  (44 tests) 17ms
stdout | tests/unit/models/Registration.test.ts > Registration Model > Method Existence Tests > should have confirmAttendance method
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Method Existence Tests > should have toJSON method
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Method Existence Tests > should have validateSync method
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Static Methods > getEventStats > should have getEventStats static method
✅ Registration model test environment cleaned up

