
> atcloud-signup-system-backend@1.0.0 test:unit
> vitest run tests/unit --testTimeout=10000

[33mThe CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.[39m

 RUN  v1.6.1 /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend

🔧 Setting up test environment...
✅ Test environment ready
 ✓ tests/unit/models/User.test.ts  (73 tests) 26ms
stdout | tests/unit/models/User.test.ts > User Model
🔧 Setting up User model test environment...
✅ User model test environment cleaned up

stdout | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > getSystemMessages > should return system messages successfully
Found 1 total messages for user user123
After filtering, found 1 messages for user user123

stdout | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > getSystemMessages > should filter messages by type when provided
Found 1 total messages for user user123
After filtering, found 1 messages for user user123

stderr | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > getSystemMessages > should handle database errors
Error in getSystemMessages: Error: Database error
    at Function.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/unifiedMessageController.test.ts:429:17)
    at Function.mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at Function.spy [as find] (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:80)
    at Function.getSystemMessages (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/controllers/unifiedMessageController.ts:59:41)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/unifiedMessageController.test.ts:436:38
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)

stdout | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > createSystemMessage > should create system message successfully
🔔 Emitted system_message_update for user user1: "Test Bell Title"
🔔 Emitted system_message_update for user user2: "Test Bell Title"

stderr | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > createSystemMessage > should validate required fields
Error in createSystemMessage: Error [ValidationError]: Validation failed: title and content are required
    at t.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/unifiedMessageController.test.ts:42:23)
    at new mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at new spy (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:34)
    at Function.createSystemMessage (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/controllers/unifiedMessageController.ts:224:23)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/unifiedMessageController.test.ts:491:7
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:11)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)

stdout | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > createTargetedSystemMessage > should create targeted system message successfully
🔔 Emitted system_message_update for user user1: "Test Bell Title"
🔔 Emitted system_message_update for user user2: "Test Bell Title"
🔔 Emitted system_message_update for user user3: "Test Bell Title"

stderr | tests/unit/controllers/unifiedMessageController.test.ts > UnifiedMessageController > createTargetedSystemMessage > should handle errors gracefully
Error creating targeted system message: Error [ValidationError]: Validation failed: title and content are required
    at t.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/unifiedMessageController.test.ts:42:23)
    at new mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at new spy (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:34)
    at Function.createTargetedSystemMessage (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/controllers/unifiedMessageController.ts:980:31)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/unifiedMessageController.test.ts:807:34
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)

 ✓ tests/unit/controllers/unifiedMessageController.test.ts  (29 tests) 7ms
 ✓ tests/unit/services/ValidationService.test.ts  (59 tests) 6ms
 ✓ tests/unit/services/ConfigService.test.ts  (51 tests) 3ms
 ✓ tests/unit/models/Event.test.ts  (57 tests) 13ms
stdout | tests/unit/models/Event.test.ts:23:11
🔧 Setting up Event model test environment...

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require title field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require type field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require date field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require time field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require endTime field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require organizer field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require createdBy field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require purpose field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require format field
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Required Fields > should require roles array with at least one role
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate title length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate type length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate date format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should accept valid date format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate time format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should accept valid time format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate endTime format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should accept valid endTime format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate location length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate organizer length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate purpose length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate format enum values
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should accept valid format values
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should validate status enum values
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Field Validation > should accept valid status values
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Conditional Location Validation > should require location for In-person format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Conditional Location Validation > should require location for Hybrid Participation format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Conditional Location Validation > should not require location for Online format
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Zoom Link Validation > should accept valid HTTP URL for zoomLink
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Zoom Link Validation > should accept valid HTTPS URL for zoomLink
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Zoom Link Validation > should reject invalid URL for zoomLink
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Zoom Link Validation > should accept empty string for zoomLink
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Schema Validation > Zoom Link Validation > should accept undefined for zoomLink
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Event Roles Validation > should validate role name length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Event Roles Validation > should validate role description length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Event Roles Validation > should validate maxParticipants minimum value
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Event Roles Validation > should validate maxParticipants maximum value
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Event Roles Validation > should accept valid role data
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Instance Methods > calculateSignedUp > should calculate signed up count from Registration collection
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Instance Methods > calculateSignedUp > should return 0 when no registrations exist
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Instance Methods > calculateTotalSlots > should calculate total slots across all roles
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Instance Methods > calculateTotalSlots > should return 0 for event with no roles
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Instance Methods > calculateTotalSlots > should handle single role
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Default Values > should set default values correctly
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > JSON Transformation > should transform _id to id in JSON output
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Field Length Validations > should validate agenda length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Field Length Validations > should validate disclaimer length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Field Length Validations > should validate description length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Field Length Validations > should validate hostedBy length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Field Length Validations > should validate requirements length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Field Length Validations > should validate materials length
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Organizer Details Validation > should validate organizer details structure
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Organizer Details Validation > should validate organizer gender enum
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Method Existence Tests > should have calculateSignedUp method
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Method Existence Tests > should have calculateTotalSlots method
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Method Existence Tests > should have toJSON method
✅ Event model test environment cleaned up

stdout | tests/unit/models/Event.test.ts > Event Model > Method Existence Tests > should have validateSync method
✅ Event model test environment cleaned up

 ✓ tests/unit/services/ErrorHandlingService.test.ts  (56 tests) 8ms
 ✓ tests/unit/routes/analytics-isolated.test.ts  (26 tests) 37ms
 ✓ tests/unit/routes/users-isolated.test.ts  (22 tests) 16ms
 ✓ tests/unit/routes/search-isolated.test.ts  (23 tests) 13ms
 ✓ tests/unit/services/LockService.test.ts  (27 tests) 381ms
stderr | tests/unit/middleware/auth.test.ts > Auth Middleware > authenticate middleware > should return 401 for JsonWebTokenError
Authentication error: Invalid token

stderr | tests/unit/middleware/auth.test.ts > Auth Middleware > authenticate middleware > should return 401 for TokenExpiredError
Authentication error: Token expired

stderr | tests/unit/middleware/auth.test.ts > Auth Middleware > authenticate middleware > should return 401 for other authentication errors
Authentication error: Some other error

 ✓ tests/unit/middleware/auth.test.ts  (33 tests) 9ms
 ✓ tests/unit/services/EventReminderScheduler.test.ts  (23 tests) 5ms
stdout | _log (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/dotenv/lib/main.js:136:11)
[dotenv@17.2.0] injecting env (13) from .env (tip: ⚙️  enable debug logging with { debug: true })

 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts  (26 tests | 25 failed) 18ms
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Core Email Service Interface > should handle core email sending with proper interface
     → expected "spy" to be called once, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Core Email Service Interface > should handle email sending failures gracefully
     → expected true to be false // Object.is equality
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry Email Templates > should generate welcome email with proper ministry branding
     → expected "spy" to be called once, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry Email Templates > should generate event creation notifications with complete event data
     → expected "spy" to be called once, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry Email Templates > should generate password reset emails with secure tokens
     → expected "spy" to be called once, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Role Management Email System > should send promotion notifications to users with celebration messaging
     → expected "spy" to be called once, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Role Management Email System > should send promotion notifications to admins with professional tone
     → expected "spy" to be called once, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Role Management Email System > should send demotion notifications with sensitive and respectful messaging
     → expected "spy" to be called once, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry Role Change System > should send AtCloud ministry role change notifications to users
     → expected "spy" to be called once, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry Role Change System > should send AtCloud role change notifications to admins
     → expected "spy" to be called once, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Event Management Email System > should send co-organizer assignment notifications with event details
     → expected "spy" to be called once, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Event Management Email System > should send event reminder notifications with timing-specific content
     → expected "spy" to be called once, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Event Management Email System > should handle virtual events with Zoom links in reminders
     → expected "spy" to be called once, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Leadership Email System > should send new leader signup notifications to admins
     → expected "spy" to be called once, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Email Template Validation > should generate HTML emails with proper @Cloud Ministry branding
     → Cannot read properties of undefined (reading '0')
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Email Template Validation > should include proper links to frontend dashboard
     → Cannot read properties of undefined (reading '0')
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Email Template Validation > should generate text fallbacks for accessibility
     → Cannot read properties of undefined (reading '0')
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Error Handling and Reliability > should handle SMTP connection failures gracefully
     → expected true to be false // Object.is equality
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Error Handling and Reliability > should handle invalid email addresses appropriately
     → expected true to be false // Object.is equality
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Error Handling and Reliability > should handle timeout errors for email delivery
     → expected true to be false // Object.is equality
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Performance and Integration > should maintain consistent performance across different email types
     → expected "spy" to be called 3 times, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Performance and Integration > should handle concurrent email sending without conflicts
     → expected "spy" to be called 5 times, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Performance and Integration > should properly handle special characters in email content
     → Cannot read properties of undefined (reading '0')
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry-Specific Features > should support different reminder timing for events
     → expected "spy" to be called 3 times, but got 0 times
   ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry-Specific Features > should maintain ministry context in all role-related emails
     → Cannot read properties of undefined (reading '0')
stdout | tests/unit/controllers/eventController.test.ts > EventController > getAllEvents > should successfully get events with pagination
🔍 [getAllEvents] Building 2 events with registration data
✅ [getAllEvents] Successfully built 2 events with registration counts

stdout | tests/unit/controllers/eventController.test.ts > EventController > getEventById > should successfully get event by ID
🔍 [getEventById] Building event data with registrations for event event123
✅ [getEventById] Successfully built event data with 1 roles
   Role 1: Participant - 0/10 registered

stdout | tests/unit/controllers/eventController.test.ts > EventController > createEvent > should successfully create a new event
🔔 Creating system messages for new event...

stderr | tests/unit/controllers/eventController.test.ts > EventController > createEvent > should successfully create a new event
❌ Failed to create system messages for event: TypeError: __vite_ssr_import_0__.User.find(...).select is not a function
    at Function.createEvent (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/controllers/eventController.ts:526:12)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/eventController.test.ts:360:7
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:11)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7
    at withEnv (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)

 ✓ tests/unit/controllers/eventController.test.ts  (29 tests) 7ms
 ✓ tests/unit/routes/events-isolated.test.ts  (21 tests) 14ms
stdout | _log (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/dotenv/lib/main.js:136:11)
[dotenv@17.2.0] injecting env (0) from .env (tip: 🔐 encrypt with dotenvx: https://dotenvx.com)

 ✓ tests/unit/services/infrastructure/EmailService.test.ts  (30 tests) 10ms
stdout | tests/unit/models/Registration.test.ts:10:11
🔧 Setting up Registration model test environment...

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Required Fields > should require userId field
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Required Fields > should require eventId field
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Required Fields > should require roleId field
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Required Fields > should require userSnapshot field
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Required Fields > should require eventSnapshot field
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Required Fields > should require registeredBy field
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Status Enum Validation > should accept valid status values
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Status Enum Validation > should reject invalid status values
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Status Enum Validation > should default status to active
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > UserSnapshot Validation > should require username in userSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > UserSnapshot Validation > should require email in userSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > UserSnapshot Validation > should validate gender enum in userSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > UserSnapshot Validation > should validate systemAuthorizationLevel enum
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > EventSnapshot Validation > should require title in eventSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > EventSnapshot Validation > should validate date format in eventSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > EventSnapshot Validation > should accept valid date format in eventSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > EventSnapshot Validation > should validate time format in eventSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > EventSnapshot Validation > should accept valid time format in eventSnapshot
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Field Length Validations > should validate notes length
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Field Length Validations > should validate specialRequirements length
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > Field Length Validations > should validate userAgent length
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > IP Address Validation > should accept valid IPv4 addresses
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > IP Address Validation > should accept valid IPv6 addresses
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > IP Address Validation > should reject invalid IP addresses
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Schema Validation > IP Address Validation > should allow empty IP address
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Instance Methods > addAuditEntry > should add audit entry to actionHistory
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Instance Methods > addAuditEntry > should add audit entry with previous and new values
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Instance Methods > updateNotes > should update notes and add audit entry
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Instance Methods > changeRole > should change role and add audit entry
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Instance Methods > confirmAttendance > should confirm attendance for active registration
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Instance Methods > confirmAttendance > should throw error for non-active registration
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Pre-save Middleware > should add initial audit entry for new registration
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Default Values > should set default values correctly
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > JSON Transformation > should transform _id to id in JSON output
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Action History Validation > should validate action enum values
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Action History Validation > should require performedBy in action history
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Action History Validation > should validate details length in action history
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Method Existence Tests > should have addAuditEntry method
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Method Existence Tests > should have updateNotes method
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Method Existence Tests > should have changeRole method
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Method Existence Tests > should have confirmAttendance method
✅ Registration model test environment cleaned up

 ✓ tests/unit/models/Registration.test.ts  (44 tests) 16ms
stdout | tests/unit/models/Registration.test.ts > Registration Model > Method Existence Tests > should have toJSON method
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Method Existence Tests > should have validateSync method
✅ Registration model test environment cleaned up

stdout | tests/unit/models/Registration.test.ts > Registration Model > Static Methods > getEventStats > should have getEventStats static method
✅ Registration model test environment cleaned up

stderr | tests/unit/routes/monitor-isolated.test.ts > Monitor Routes - Isolated Tests > GET /api/monitor/stats - Request Statistics > should handle monitoring service errors gracefully
Error getting monitor stats: Error: Monitoring service unavailable
    at Object.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/monitor-isolated.test.ts:240:15)
    at Object.mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at Object.spy [as getStats] (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:80)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/monitor-isolated.test.ts:43:31
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:346:12)

stderr | tests/unit/routes/monitor-isolated.test.ts > Monitor Routes - Isolated Tests > POST /api/monitor/emergency-disable - Emergency Rate Limiting Control > should handle emergency disable service errors
Error disabling rate limiting: Error: Failed to access rate limiter
    at Object.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/monitor-isolated.test.ts:273:17)
    at Object.mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at Object.spy [as emergencyDisableRateLimit] (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:80)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/monitor-isolated.test.ts:62:17
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:346:12)

stderr | tests/unit/routes/monitor-isolated.test.ts > Monitor Routes - Isolated Tests > POST /api/monitor/emergency-enable - Emergency Rate Limiting Recovery > should handle emergency enable service errors
Error re-enabling rate limiting: Error: Failed to access rate limiter configuration
    at Object.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/monitor-isolated.test.ts:305:17)
    at Object.mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at Object.spy [as emergencyEnableRateLimit] (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:80)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/monitor-isolated.test.ts:82:17
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:346:12)

stderr | tests/unit/routes/monitor-isolated.test.ts > Monitor Routes - Isolated Tests > GET /api/monitor/rate-limiting-status - Rate Limiting Status > should handle rate limiting status service errors
Error getting rate limiting status: Error: Configuration service unavailable
    at Object.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/monitor-isolated.test.ts:364:15)
    at Object.mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at Object.spy [as getRateLimitingStatus] (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:80)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/monitor-isolated.test.ts:102:32
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:346:12)

stderr | tests/unit/routes/monitor-isolated.test.ts > Monitor Routes - Isolated Tests > GET /api/monitor/health - System Health Check > should handle health check service errors
Error checking health: Error: Health monitoring system failure
    at Object.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/monitor-isolated.test.ts:439:15)
    at Object.mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at Object.spy [as getStats] (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:80)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/monitor-isolated.test.ts:121:31
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:346:12)

stderr | tests/unit/routes/monitor-isolated.test.ts > Monitor Routes - Isolated Tests > Error Handling and Recovery > should handle null responses from monitoring service
Error checking health: TypeError: Cannot read properties of null (reading 'requestsPerSecond')
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/monitor-isolated.test.ts:124:17
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:280:10)
    at jsonParser (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/body-parser/lib/types/json.js:113:7)
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)

stderr | tests/unit/routes/monitor-isolated.test.ts > Monitor Routes - Isolated Tests > Error Handling and Recovery > should handle monitoring service getInstance failures
Error getting monitor stats: Error: Singleton initialization failed
    at Object.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/monitor-isolated.test.ts:558:15)
    at Object.mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at Object.spy [as getInstance] (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:80)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/monitor-isolated.test.ts:42:51
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/index.js:346:12)

 ✓ tests/unit/routes/monitor-isolated.test.ts  (21 tests) 16ms
(node:8895) [MONGOOSE] Warning: Duplicate schema index on {"expiresAt":1} found. This is often due to declaring an index using both "index: true" and "schema.index()". Please remove the duplicate index definition.
(Use `node --trace-warnings ...` to show where the warning was created)
stdout | tests/unit/models/Message.test.ts:6:11
🔧 Setting up Message model test environment...

stdout | tests/unit/models/Message.test.ts > Message Model > Schema Validation > Required Fields > should require title field
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Schema Validation > Required Fields > should require content field
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Schema Validation > Required Fields > should require type field
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Schema Validation > Required Fields > should require creator field
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Schema Validation > Required Fields > should require creator sub-fields
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Schema Validation > Field Length Validations > should validate title length
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Schema Validation > Field Length Validations > should validate content length
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Schema Validation > Enum Validations > should accept valid type values
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Schema Validation > Enum Validations > should reject invalid type values
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Schema Validation > Enum Validations > should accept valid priority values
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Schema Validation > Enum Validations > should reject invalid priority values
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Schema Validation > Enum Validations > should validate creator gender enum
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Default Values > should set default values correctly
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > getUserState > should return default state for non-existent user
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > getUserState > should return existing state for user
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > updateUserState > should update user state and mark as modified
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > updateUserState > should merge with existing state
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > markAsReadInBell > should mark message as read in bell notifications
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > markAsReadInSystem > should mark message as read in system messages
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > markAsReadEverywhere > should mark message as read in both bell and system
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > removeFromBell > should remove message from bell notifications
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > deleteFromSystem > should delete message from system and auto-remove from bell
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > shouldShowInBell > should return true for active message not removed from bell
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > shouldShowInBell > should return false for inactive message
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > shouldShowInBell > should return false for message removed from bell
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > shouldShowInSystem > should return true for active message not deleted from system
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > shouldShowInSystem > should return false for inactive message
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > shouldShowInSystem > should return false for message deleted from system
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > getBellDisplayTitle > should return the message title
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > canRemoveFromBell > should return true for read message not yet removed
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > canRemoveFromBell > should return false for unread message
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Instance Methods > canRemoveFromBell > should return false for already removed message
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > JSON Transformation > should convert userStates Map to Object in JSON
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > JSON Transformation > should convert userStates Map to Object in toObject
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Static Methods > getBellNotificationsForUser > should have getBellNotificationsForUser static method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Static Methods > getSystemMessagesForUser > should have getSystemMessagesForUser static method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Static Methods > getUnreadCountsForUser > should have getUnreadCountsForUser static method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Static Methods > createForAllUsers > should have createForAllUsers static method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Static Methods > createForSpecificUser > should have createForSpecificUser static method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Method Existence Tests > should have getUserState method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Method Existence Tests > should have updateUserState method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Method Existence Tests > should have markAsReadInBell method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Method Existence Tests > should have markAsReadInSystem method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Method Existence Tests > should have markAsReadEverywhere method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Method Existence Tests > should have removeFromBell method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Method Existence Tests > should have deleteFromSystem method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Method Existence Tests > should have shouldShowInBell method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Method Existence Tests > should have shouldShowInSystem method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Method Existence Tests > should have getBellDisplayTitle method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Method Existence Tests > should have canRemoveFromBell method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Method Existence Tests > should have toJSON method
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Method Existence Tests > should have validateSync method
✅ Message model test environment cleaned up

 ✓ tests/unit/models/Message.test.ts  (55 tests) 20ms
stdout | tests/unit/models/Message.test.ts > Message Model > Optional Fields > should accept targetRoles array
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Optional Fields > should accept targetUserId
✅ Message model test environment cleaned up

stdout | tests/unit/models/Message.test.ts > Message Model > Optional Fields > should accept expiresAt date
✅ Message model test environment cleaned up

 ✓ tests/unit/services/ImageCompressionService.test.ts  (32 tests) 17ms
stdout | tests/unit/services/UserDeletionService.test.ts > UserDeletionService > deleteUserCompletely > Successful deletions > should successfully delete a user with minimal data
✅ User completely deleted: user@example.com by Super Admin: admin@example.com
📊 Deletion Report: {
  userId: '507f1f77bcf86cd799439011',
  userEmail: 'user@example.com',
  deletedData: {
    userRecord: true,
    registrations: 4,
    eventsCreated: 0,
    eventOrganizations: 0,
    messageStates: 3,
    messagesCreated: 1
  },
  updatedStatistics: { events: [], affectedUsers: 0 },
  errors: []
}

stdout | tests/unit/services/UserDeletionService.test.ts > UserDeletionService > deleteUserCompletely > Successful deletions > should delete user with created events and handle statistics update
✅ User completely deleted: user@example.com by Super Admin: admin@example.com
📊 Deletion Report: {
  userId: '507f1f77bcf86cd799439011',
  userEmail: 'user@example.com',
  deletedData: {
    userRecord: true,
    registrations: 2,
    eventsCreated: 2,
    eventOrganizations: 1,
    messageStates: 0,
    messagesCreated: 0
  },
  updatedStatistics: {
    events: [ '6893c713ddfce4ffdf0b0634', '6893c713ddfce4ffdf0b0635' ],
    affectedUsers: 0
  },
  errors: []
}

stdout | tests/unit/services/UserDeletionService.test.ts > UserDeletionService > deleteUserCompletely > Successful deletions > should handle user with organizer roles correctly
✅ User completely deleted: user@example.com by Super Admin: admin@example.com
📊 Deletion Report: {
  userId: '507f1f77bcf86cd799439011',
  userEmail: 'user@example.com',
  deletedData: {
    userRecord: true,
    registrations: 0,
    eventsCreated: 0,
    eventOrganizations: 3,
    messageStates: 0,
    messagesCreated: 0
  },
  updatedStatistics: { events: [], affectedUsers: 0 },
  errors: []
}

stdout | tests/unit/services/UserDeletionService.test.ts > UserDeletionService > deleteUserCompletely > Successful deletions > should clean up message states and created messages
✅ User completely deleted: user@example.com by Super Admin: admin@example.com
📊 Deletion Report: {
  userId: '507f1f77bcf86cd799439011',
  userEmail: 'user@example.com',
  deletedData: {
    userRecord: true,
    registrations: 0,
    eventsCreated: 0,
    eventOrganizations: 0,
    messageStates: 5,
    messagesCreated: 3
  },
  updatedStatistics: { events: [], affectedUsers: 0 },
  errors: []
}

stderr | tests/unit/services/UserDeletionService.test.ts > UserDeletionService > deleteUserCompletely > Error handling > should throw error when user is not found
❌ User deletion failed: Error: User not found
    at Function.deleteUserCompletely (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/services/UserDeletionService.ts:57:15)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/UserDeletionService.test.ts:273:9
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:11)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7

stderr | tests/unit/services/UserDeletionService.test.ts > UserDeletionService > deleteUserCompletely > Error handling > should handle database errors and include them in report
❌ User deletion failed: Error: Database connection failed
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/UserDeletionService.test.ts:288:11
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)

stderr | tests/unit/services/UserDeletionService.test.ts > UserDeletionService > deleteUserCompletely > Error handling > should handle partial failures in registration deletion
❌ User deletion failed: Error: Registrar deletion failed
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/UserDeletionService.test.ts:305:34
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)

stdout | tests/unit/services/UserDeletionService.test.ts > UserDeletionService > deleteUserCompletely > Complex scenarios > should handle user with maximum data complexity
✅ User completely deleted: user@example.com by Super Admin: admin@example.com
📊 Deletion Report: {
  userId: '507f1f77bcf86cd799439011',
  userEmail: 'user@example.com',
  deletedData: {
    userRecord: true,
    registrations: 8,
    eventsCreated: 2,
    eventOrganizations: 4,
    messageStates: 7,
    messagesCreated: 2
  },
  updatedStatistics: {
    events: [ '6893c713ddfce4ffdf0b0636', '6893c713ddfce4ffdf0b0637' ],
    affectedUsers: 0
  },
  errors: []
}

 ✓ tests/unit/services/UserDeletionService.test.ts  (13 tests) 9ms
stderr | tests/unit/routes/system-isolated.test.ts > System Routes - Isolated Tests > GET /api/v1/system/locks - Lock Statistics (Admin Only) > should handle lock service errors gracefully
Error getting lock stats: Error: Lock service unavailable
    at Object.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/system-isolated.test.ts:308:15)
    at Object.mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at Object.spy [as getLockStats] (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:80)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/system-isolated.test.ts:88:41
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:149:13)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/system-isolated.test.ts:44:5
    at mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at spy (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:80)
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)

stderr | tests/unit/routes/system-isolated.test.ts > System Routes - Isolated Tests > Error Handling Scenarios > should handle lock service returning null/undefined
Error getting lock stats: TypeError: Cannot read properties of null (reading 'averageWaitTime')
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/system-isolated.test.ts:97:36
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:149:13)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/system-isolated.test.ts:44:5
    at mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at spy (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:80)
    at Layer.handle [as handle_request] (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/express/lib/router/route.js:149:13)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/routes/system-isolated.test.ts:38:3
    at mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)

 ✓ tests/unit/routes/system-isolated.test.ts  (24 tests) 29ms
stderr | tests/unit/controllers/registrationController.test.ts > RegistrationController > getEventRegistrations > should handle database errors
Error fetching event registrations: Error: Database error
    at Function.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/registrationController.test.ts:370:15)
    at Function.mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at Function.spy [as find] (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:80)
    at Function.getEventRegistrations (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/registrationController.test.ts:91:48)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/registrationController.test.ts:373:40
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)

stderr | tests/unit/controllers/registrationController.test.ts > RegistrationController > getRegistrationStats > should handle database errors
Error fetching registration stats: Error: Database error
    at Function.<anonymous> (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/registrationController.test.ts:548:15)
    at Function.mockCall (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/spy/dist/index.js:50:17)
    at Function.spy [as aggregate] (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/tinyspy/dist/index.js:42:80)
    at Function.getRegistrationStats (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/registrationController.test.ts:198:40)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/registrationController.test.ts:551:40
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)

 ✓ tests/unit/controllers/registrationController.test.ts  (18 tests) 5ms
 ✓ tests/unit/middleware/validation.test.ts  (35 tests) 11ms
 ✓ tests/unit/services/infrastructure/SocketService.test.ts  (33 tests) 18ms
 ✓ tests/unit/services/LoggerService.test.ts  (38 tests) 28ms
 ✓ tests/unit/middleware/errorHandler.test.ts  (29 tests) 122ms
stdout | _log (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/dotenv/lib/main.js:136:11)
[dotenv@17.2.0] injecting env (0) from .env (tip: ⚙️  suppress all logs with { quiet: true })

stdout | tests/unit/services/notifications/TrioNotificationService.test.ts > TrioNotificationService > createTrio > should successfully create a complete trio with all components
🔄 Transaction trio-tx-me0h27yq-w9847oq5f started
🔄 Starting trio creation for 2 recipients
➕ Added email operation undefined to transaction trio-tx-me0h27yq-w9847oq5f
📧 Email sent in 0ms
➕ Added message operation message-456 to transaction trio-tx-me0h27yq-w9847oq5f
💬 System message created in 0ms
➕ Added websocket operation ws-1754515219923 to transaction trio-tx-me0h27yq-w9847oq5f
🔔 WebSocket events emitted in 0ms
✅ Transaction trio-tx-me0h27yq-w9847oq5f committed successfully (1ms, 3 operations)
✅ Trio creation completed successfully in 1ms

stdout | tests/unit/services/notifications/TrioNotificationService.test.ts > TrioNotificationService > createTrio > should handle email-only trio (no email provided)
🔄 Transaction trio-tx-me0h27ys-pgp8xmnh0 started
🔄 Starting trio creation for 1 recipients
➕ Added message operation message-456 to transaction trio-tx-me0h27ys-pgp8xmnh0
💬 System message created in 0ms
➕ Added websocket operation ws-1754515219924 to transaction trio-tx-me0h27ys-pgp8xmnh0
🔔 WebSocket events emitted in 0ms
✅ Transaction trio-tx-me0h27ys-pgp8xmnh0 committed successfully (0ms, 2 operations)
✅ Trio creation completed successfully in 0ms

stdout | tests/unit/services/notifications/TrioNotificationService.test.ts > TrioNotificationService > createTrio > should rollback operations on failure when rollback is enabled
🔄 Transaction trio-tx-me0h27yt-udz3lmrjx started
🔄 Starting trio creation for 1 recipients
➕ Added email operation undefined to transaction trio-tx-me0h27yt-udz3lmrjx
📧 Email sent in 0ms
🔄 Rolling back transaction trio-tx-me0h27yt-udz3lmrjx (1 operations)
🔄 Rolling back email operation undefined
🔄 Email rollback - marking as cancelled
✅ Successfully rolled back email operation undefined
✅ Transaction trio-tx-me0h27yt-udz3lmrjx rollback completed successfully
🔄 Rollback completed successfully

stderr | tests/unit/services/notifications/TrioNotificationService.test.ts > TrioNotificationService > createTrio > should rollback operations on failure when rollback is enabled
❌ Trio creation failed: Error: System message creation failed: Error: Database error
    at Function.createSystemMessage (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/services/notifications/TrioNotificationService.ts:345:13)
    at Function.createTrio (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/services/notifications/TrioNotificationService.ts:124:29)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/notifications/TrioNotificationService.test.ts:206:22
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:11)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7

stdout | tests/unit/services/notifications/TrioNotificationService.test.ts > TrioNotificationService > createTrio > should handle email timeout with retry logic
🔄 Transaction trio-tx-me0h27yw-okrw1x3w4 started
🔄 Starting trio creation for 1 recipients
🔄 Rolling back transaction trio-tx-me0h27yw-okrw1x3w4 (0 operations)
✅ Transaction trio-tx-me0h27yw-okrw1x3w4 rollback completed successfully
🔄 Rollback completed successfully

stderr | tests/unit/services/notifications/TrioNotificationService.test.ts > TrioNotificationService > createTrio > should handle email timeout with retry logic
📧 Email attempt 1/3 failed: Error: Service unavailable
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/notifications/TrioNotificationService.test.ts:224:9
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7
📧 Email attempt 2/3 failed: Error: Service unavailable
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/notifications/TrioNotificationService.test.ts:224:9
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7
📧 Email attempt 3/3 failed: Error: Service unavailable
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/notifications/TrioNotificationService.test.ts:224:9
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7
❌ Trio creation failed: Error: Email failed after 3 attempts: Error: Service unavailable
    at Function.sendEmailWithTimeout (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/services/notifications/TrioNotificationService.ts:246:17)
    at Function.createTrio (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/services/notifications/TrioNotificationService.ts:114:23)

stdout | tests/unit/services/notifications/TrioNotificationService.test.ts > TrioNotificationService > createTrio > should update metrics correctly on success and failure
🔄 Transaction trio-tx-me0h27yy-figujpv8l started
🔄 Starting trio creation for 1 recipients
➕ Added message operation message-456 to transaction trio-tx-me0h27yy-figujpv8l
💬 System message created in 0ms
➕ Added websocket operation ws-1754515219930 to transaction trio-tx-me0h27yy-figujpv8l
🔔 WebSocket events emitted in 0ms
✅ Transaction trio-tx-me0h27yy-figujpv8l committed successfully (0ms, 2 operations)
✅ Trio creation completed successfully in 0ms
🔄 Transaction trio-tx-me0h27yy-3ekj4tcz7 started
🔄 Starting trio creation for 1 recipients
🔄 Rolling back transaction trio-tx-me0h27yy-3ekj4tcz7 (0 operations)
✅ Transaction trio-tx-me0h27yy-3ekj4tcz7 rollback completed successfully
🔄 Rollback completed successfully

stderr | tests/unit/services/notifications/TrioNotificationService.test.ts > TrioNotificationService > createTrio > should update metrics correctly on success and failure
❌ Trio creation failed: Error: System message creation failed: Error: DB Error
    at Function.createSystemMessage (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/services/notifications/TrioNotificationService.ts:345:13)
    at Function.createTrio (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/services/notifications/TrioNotificationService.ts:124:29)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/notifications/TrioNotificationService.test.ts:307:7
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:11)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7

stdout | tests/unit/services/notifications/TrioNotificationService.test.ts > TrioNotificationService > convenience methods > should create welcome trio with correct parameters
🔄 Transaction trio-tx-me0h27yz-oerioq0mb started
🔄 Starting trio creation for 1 recipients
➕ Added email operation undefined to transaction trio-tx-me0h27yz-oerioq0mb
📧 Email sent in 0ms
➕ Added message operation message-456 to transaction trio-tx-me0h27yz-oerioq0mb
💬 System message created in 0ms
➕ Added websocket operation ws-1754515219931 to transaction trio-tx-me0h27yz-oerioq0mb
🔔 WebSocket events emitted in 0ms
✅ Transaction trio-tx-me0h27yz-oerioq0mb committed successfully (0ms, 3 operations)
✅ Trio creation completed successfully in 0ms

stdout | tests/unit/services/notifications/TrioNotificationService.test.ts > TrioNotificationService > convenience methods > should create password reset success trio with correct parameters
🔄 Transaction trio-tx-me0h27z0-p3lnfc2pv started
🔄 Starting trio creation for 1 recipients
➕ Added email operation undefined to transaction trio-tx-me0h27z0-p3lnfc2pv
📧 Email sent in 0ms
➕ Added message operation message-456 to transaction trio-tx-me0h27z0-p3lnfc2pv
💬 System message created in 0ms
➕ Added websocket operation ws-1754515219932 to transaction trio-tx-me0h27z0-p3lnfc2pv
🔔 WebSocket events emitted in 0ms
✅ Transaction trio-tx-me0h27z0-p3lnfc2pv committed successfully (0ms, 3 operations)
✅ Trio creation completed successfully in 0ms

stdout | tests/unit/services/notifications/TrioNotificationService.test.ts > TrioNotificationService > convenience methods > should create event reminder trio with correct parameters
🔄 Transaction trio-tx-me0h27z0-eowxf88e2 started
🔄 Starting trio creation for 1 recipients
➕ Added email operation undefined to transaction trio-tx-me0h27z0-eowxf88e2
📧 Email sent in 0ms
➕ Added message operation message-456 to transaction trio-tx-me0h27z0-eowxf88e2
💬 System message created in 0ms
➕ Added websocket operation ws-1754515219932 to transaction trio-tx-me0h27z0-eowxf88e2
🔔 WebSocket events emitted in 1ms
✅ Transaction trio-tx-me0h27z0-eowxf88e2 committed successfully (1ms, 3 operations)
✅ Trio creation completed successfully in 1ms

stdout | tests/unit/services/notifications/TrioNotificationService.test.ts > TrioNotificationService > metrics and monitoring > should track performance metrics correctly
🔄 Transaction trio-tx-me0h27z1-klb995ova started
🔄 Starting trio creation for 1 recipients
➕ Added message operation message-456 to transaction trio-tx-me0h27z1-klb995ova
💬 System message created in 0ms
➕ Added websocket operation ws-1754515219933 to transaction trio-tx-me0h27z1-klb995ova
🔔 WebSocket events emitted in 0ms
✅ Transaction trio-tx-me0h27z1-klb995ova committed successfully (0ms, 2 operations)
✅ Trio creation completed successfully in 0ms

 ✓ tests/unit/services/notifications/TrioNotificationService.test.ts  (10 tests) 14ms
 ✓ tests/unit/routes/auth-isolated.test.ts  (19 tests) 18ms
stderr | tests/unit/services/ResponseBuilderService.test.ts > ResponseBuilderService > buildEventWithRegistrations > should handle database errors gracefully
Error building event with registrations: Error: Database error
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/ResponseBuilderService.test.ts:195:43
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7

 ✓ tests/unit/services/ResponseBuilderService.test.ts  (12 tests) 8ms
stderr | tests/unit/services/ResponseBuilderService.test.ts > ResponseBuilderService > buildUserSignupStatus > should handle database errors gracefully
Error building user signup status: Error: Database error
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/ResponseBuilderService.test.ts:478:41
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7

stderr | tests/unit/services/RegistrationQueryService.test.ts > RegistrationQueryService > getRoleAvailability > should handle database errors gracefully
Error getting role availability: Error: Database error
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/RegistrationQueryService.test.ts:155:41
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7

stderr | tests/unit/services/RegistrationQueryService.test.ts > RegistrationQueryService > getEventSignupCounts > should handle database errors gracefully
Error getting event signup counts: Error: Database error
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/RegistrationQueryService.test.ts:235:41
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7

stderr | tests/unit/services/RegistrationQueryService.test.ts > RegistrationQueryService > getUserSignupInfo > should return null when user does not exist
Error getting user signup info: BSONError: input must be a 24 character hex string, 12 byte Uint8Array, or an integer
    at new ObjectId (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/node_modules/bson/src/objectid.ts:120:15)
    at Function.getUserSignupInfo (/Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/src/services/RegistrationQueryService.ts:174:21)
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/RegistrationQueryService.test.ts:297:53
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)

stderr | tests/unit/services/RegistrationQueryService.test.ts > RegistrationQueryService > getUserSignupInfo > should handle database errors gracefully
Error getting user signup info: Error: Database error
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/RegistrationQueryService.test.ts:306:41
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7

stderr | tests/unit/services/RegistrationQueryService.test.ts > RegistrationQueryService > getRoleParticipants > should handle database errors gracefully
Error getting role participants: Error: Database error
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/RegistrationQueryService.test.ts:369:9
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7

stderr | tests/unit/services/RegistrationQueryService.test.ts > RegistrationQueryService > isUserRegisteredForRole > should handle database errors gracefully
Error checking user registration: Error: Database error
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/RegistrationQueryService.test.ts:421:41
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7

 ✓ tests/unit/services/RegistrationQueryService.test.ts  (20 tests) 12ms
stderr | tests/unit/services/RegistrationQueryService.test.ts > RegistrationQueryService > getUserRoleInEvent > should handle database errors gracefully
Error getting user role in event: Error: Database error
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/services/RegistrationQueryService.test.ts:481:41
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7

stderr | tests/unit/controllers/authController.test.ts > AuthController > register > should reject registration with existing username
Registration error: Error: Duplicate key error
    at /Users/dr.hunter/CS Projects/at-Cloud-sign-up-system/backend/tests/unit/controllers/authController.test.ts:191:30
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///Users/dr.hunter/CS%20Projects/at-Cloud-sign-up-system/backend/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7 {
  code: 11000,
  keyPattern: { username: 1 }
}

 ✓ tests/unit/controllers/authController.test.ts  (17 tests) 10ms
 ✓ tests/unit/services/DataIntegrityService.test.ts  (9 tests) 6ms
 ✓ tests/unit/services/infrastructure/autoEmailNotificationService.test.ts  (15 tests) 7ms
 ✓ tests/unit/controllers/userController.test.ts  (15 tests) 11ms
 ✓ tests/unit/middleware/upload.test.ts  (16 tests) 11ms
 ✓ tests/unit/routes/notifications-isolated.test.ts  (3 tests) 3ms
 ✓ tests/unit/services/SimpleTest.test.ts  (1 test) 1ms

⎯⎯⎯⎯⎯⎯ Failed Tests 25 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Core Email Service Interface > should handle core email sending with proper interface
AssertionError: expected "spy" to be called once, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:87:40
     85| 
     86|       expect(result).toBe(true);
     87|       expect(mockTransporter.sendMail).toHaveBeenCalledOnce();
       |                                        ^
     88|       
     89|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Core Email Service Interface > should handle email sending failures gracefully
AssertionError: expected true to be false // Object.is equality

- Expected
+ Received

- false
+ true

 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:104:22
    102|       });
    103| 
    104|       expect(result).toBe(false);
       |                      ^
    105|       expect(console.error).toHaveBeenCalled();
    106|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry Email Templates > should generate welcome email with proper ministry branding
AssertionError: expected "spy" to be called once, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:114:40
    112| 
    113|       expect(result).toBe(true);
    114|       expect(mockTransporter.sendMail).toHaveBeenCalledOnce();
       |                                        ^
    115|       
    116|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry Email Templates > should generate event creation notifications with complete event data
AssertionError: expected "spy" to be called once, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:142:40
    140| 
    141|       expect(result).toBe(true);
    142|       expect(mockTransporter.sendMail).toHaveBeenCalledOnce();
       |                                        ^
    143|       
    144|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry Email Templates > should generate password reset emails with secure tokens
AssertionError: expected "spy" to be called once, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:160:40
    158| 
    159|       expect(result).toBe(true);
    160|       expect(mockTransporter.sendMail).toHaveBeenCalledOnce();
       |                                        ^
    161|       
    162|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Role Management Email System > should send promotion notifications to users with celebration messaging
AssertionError: expected "spy" to be called once, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:192:40
    190| 
    191|       expect(result).toBe(true);
    192|       expect(mockTransporter.sendMail).toHaveBeenCalledOnce();
       |                                        ^
    193|       
    194|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Role Management Email System > should send promotion notifications to admins with professional tone
AssertionError: expected "spy" to be called once, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:225:40
    223| 
    224|       expect(result).toBe(true);
    225|       expect(mockTransporter.sendMail).toHaveBeenCalledOnce();
       |                                        ^
    226|       
    227|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Role Management Email System > should send demotion notifications with sensitive and respectful messaging
AssertionError: expected "spy" to be called once, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:259:40
    257| 
    258|       expect(result).toBe(true);
    259|       expect(mockTransporter.sendMail).toHaveBeenCalledOnce();
       |                                        ^
    260|       
    261|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry Role Change System > should send AtCloud ministry role change notifications to users
AssertionError: expected "spy" to be called once, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:286:40
    284| 
    285|       expect(result).toBe(true);
    286|       expect(mockTransporter.sendMail).toHaveBeenCalledOnce();
       |                                        ^
    287|       
    288|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry Role Change System > should send AtCloud role change notifications to admins
AssertionError: expected "spy" to be called once, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:313:40
    311| 
    312|       expect(result).toBe(true);
    313|       expect(mockTransporter.sendMail).toHaveBeenCalledOnce();
       |                                        ^
    314|       
    315|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Event Management Email System > should send co-organizer assignment notifications with event details
AssertionError: expected "spy" to be called once, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:350:40
    348| 
    349|       expect(result).toBe(true);
    350|       expect(mockTransporter.sendMail).toHaveBeenCalledOnce();
       |                                        ^
    351|       
    352|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Event Management Email System > should send event reminder notifications with timing-specific content
AssertionError: expected "spy" to be called once, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:377:40
    375| 
    376|       expect(result).toBe(true);
    377|       expect(mockTransporter.sendMail).toHaveBeenCalledOnce();
       |                                        ^
    378|       
    379|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Event Management Email System > should handle virtual events with Zoom links in reminders
AssertionError: expected "spy" to be called once, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:405:40
    403| 
    404|       expect(result).toBe(true);
    405|       expect(mockTransporter.sendMail).toHaveBeenCalledOnce();
       |                                        ^
    406|       
    407|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Leadership Email System > should send new leader signup notifications to admins
AssertionError: expected "spy" to be called once, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:430:40
    428| 
    429|       expect(result).toBe(true);
    430|       expect(mockTransporter.sendMail).toHaveBeenCalledOnce();
       |                                        ^
    431|       
    432|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Email Template Validation > should generate HTML emails with proper @Cloud Ministry branding
TypeError: Cannot read properties of undefined (reading '0')
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:445:62
    443|       await EmailService.sendWelcomeEmail("test@example.com", "Test Us…
    444|       
    445|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];
       |                                                              ^
    446|       expect(sentEmail.html).toContain("@Cloud Ministry");
    447|       expect(sentEmail.html).toContain("<!DOCTYPE html>");

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Email Template Validation > should include proper links to frontend dashboard
TypeError: Cannot read properties of undefined (reading '0')
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:455:62
    453|       await EmailService.sendWelcomeEmail("test@example.com", "Test Us…
    454|       
    455|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];
       |                                                              ^
    456|       expect(sentEmail.html).toContain("http://localhost:5173");
    457|       expect(sentEmail.html).toContain("/dashboard");

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Email Template Validation > should generate text fallbacks for accessibility
TypeError: Cannot read properties of undefined (reading '0')
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:468:62
    466| 
    467|       expect(result).toBe(true);
    468|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];
       |                                                              ^
    469|       expect(sentEmail.text).toBeDefined();
    470|       expect(sentEmail.text).toContain("Test User");

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Error Handling and Reliability > should handle SMTP connection failures gracefully
AssertionError: expected true to be false // Object.is equality

- Expected
+ Received

- false
+ true

 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:480:22
    478|       const result = await EmailService.sendWelcomeEmail("test@example…
    479| 
    480|       expect(result).toBe(false);
       |                      ^
    481|       expect(console.error).toHaveBeenCalledWith(
    482|         "Failed to send email:",

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Error Handling and Reliability > should handle invalid email addresses appropriately
AssertionError: expected true to be false // Object.is equality

- Expected
+ Received

- false
+ true

 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:496:22
    494|       });
    495| 
    496|       expect(result).toBe(false);
       |                      ^
    497|     });
    498| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Error Handling and Reliability > should handle timeout errors for email delivery
AssertionError: expected true to be false // Object.is equality

- Expected
+ Received

- false
+ true

 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:516:22
    514|       );
    515| 
    516|       expect(result).toBe(false);
       |                      ^
    517|     });
    518|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Performance and Integration > should maintain consistent performance across different email types
AssertionError: expected "spy" to be called 3 times, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:542:40
    540| 
    541|       expect(executionTime).toBeLessThan(1000); // Should complete wit…
    542|       expect(mockTransporter.sendMail).toHaveBeenCalledTimes(3);
       |                                        ^
    543|     });
    544| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Performance and Integration > should handle concurrent email sending without conflicts
AssertionError: expected "spy" to be called 5 times, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:553:40
    551| 
    552|       expect(results.every(result => result === true)).toBe(true);
    553|       expect(mockTransporter.sendMail).toHaveBeenCalledTimes(5);
       |                                        ^
    554|     });
    555| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Performance and Integration > should properly handle special characters in email content
TypeError: Cannot read properties of undefined (reading '0')
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:563:62
    561| 
    562|       expect(result).toBe(true);
    563|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];
       |                                                              ^
    564|       expect(sentEmail.html).toContain("José María & Sarah O'Connor");
    565|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[23/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry-Specific Features > should support different reminder timing for events
AssertionError: expected "spy" to be called 3 times, but got 0 times
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:583:40
    581|       await EmailService.sendEventReminderEmail("test@example.com", "U…
    582| 
    583|       expect(mockTransporter.sendMail).toHaveBeenCalledTimes(3);
       |                                        ^
    584|       
    585|       // Verify different subjects for different timing

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[24/25]⎯

 FAIL  tests/unit/services/infrastructure/EmailService.comprehensive.test.ts > EmailService - Comprehensive Validation > Ministry-Specific Features > should maintain ministry context in all role-related emails
TypeError: Cannot read properties of undefined (reading '0')
 ❯ tests/unit/services/infrastructure/EmailService.comprehensive.test.ts:608:62
    606|       await EmailService.sendPromotionNotificationToUser("john@example…
    607|       
    608|       const sentEmail = mockTransporter.sendMail.mock.calls[0][0];
       |                                                              ^
    609|       expect(sentEmail.html).toContain("ministry");
    610|       expect(sentEmail.html).toContain("faith");

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[25/25]⎯

 Test Files  1 failed | 37 passed (38)
      Tests  25 failed | 1039 passed (1064)
   Start at  14:20:18
   Duration  1.69s (transform 329ms, setup 21ms, collect 572ms, tests 965ms, environment 0ms, prepare 27ms)

🧹 Cleaning up test environment...
✅ Test environment cleaned up
